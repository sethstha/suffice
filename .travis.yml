# Travis CI configuration file.
# @link https://travis-ci.org/

# For use with the Twenty Seventeen WordPress theme
# @link https://github.com/WordPress/twentyseventeen/

# Declare project language and PHP versions to test against.
# @link http://about.travis-ci.org/docs/user/languages/php/
language: php

# Declare versions of PHP to use. Use one decimal max.
php:
    - "7.0"
    - "5.6"
    - "5.5"
    - "5.4"
    - "5.3"
    # Current $required_php_version for WordPress: 5.2.4
    - "5.2"

# Ditch sudo and use containers.
# @link http://docs.travis-ci.com/user/migrating-from-legacy/#Why-migrate-to-container-based-infrastructure%3F
# @link http://docs.travis-ci.com/user/workers/container-based-infrastructure/#Routing-your-build-to-container-based-infrastructure
sudo: false

# Declare which versions of WordPress to test against.
# Also declare whether or not to test in Multisite.
env:
    # Trunk (current version in development is 4.7)
    # @link https://github.com/WordPress/WordPress
    - WP_VERSION=master WP_MULTISITE=0

# Use this to prepare your build for testing.
# e.g. copy database configurations, environment variables, etc.
# Failures in this section will result in build status 'errored'.
before_script:
    
    - pear install PHP_CodeSniffer-2.8.0
    - phpenv rehash
    # Install WordPress Coding Standards.
    - mkdir wordpress-coding-standards && curl -L https://github.com/WordPress-Coding-Standards/WordPress-Coding-Standards/archive/master.tar.gz | tar xz --strip-components=1 -C wordpress-coding-standards
    # Hop into CodeSniffer directory.
    - cd php-codesniffer
    # Set install path for WordPress Coding Standards
    # @link https://github.com/squizlabs/PHP_CodeSniffer/blob/4237c2fc98cc838730b76ee9cee316f99286a2a7/CodeSniffer.php#L1941
    - phpcs --config-set installed_paths ../wordpress-coding-standards
    # Hop into themes directory.
    # After CodeSniffer install you should refresh your path.
    - phpenv rehash


# Run test script commands.
# Default is specific to project language.
# All commands must exit with code 0 on success. Anything else is considered failure.
script:
    # Search theme for PHP syntax errors.
    - find . \( -name '*.php' \) -exec php -lf {} \;
    # Run the theme through JSHint
   
    - ./php-codesniffer/scripts/phpcs -p -s -v -n . --standard=./codesniffer.ruleset.xml --extensions=php
